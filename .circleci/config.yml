version: 2.1
orbs:
  cloudrun: circleci/gcp-cloud-run@1.0.2
jobs:
  build:
    docker:
      - image: circleci/node:lts-browsers
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm ci

      # force update the webdriver
      # - run: cd ./node_modules/protractor && npm i webdrivermanager@latest
      # because we use "npm ci" to install NPM dependencies
      # we cache "~/.npm" folder
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - run: npm run style
      - run: npm run lint
      - run: npm run build:prod
      - run: npm run test:nowatch
      - run:
          name: Tar && Gzip compiled app
          command: tar zcf dist.tar.gz dist/local-weather-app
      - store_artifacts:
          path: dist.tar.gz
      - run:
          name: Move compiled app to workspace
          command: |
            set -exu
            mkdir -p /tmp/workspace/dist
            mv dist/local-weather-app /tmp/workspace/dist
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - dist/local-weather-app
  deploy_vercel:
    docker:
      - image: circleci/node:lts
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: npx vercel --token $VERCEL_TOKEN --platform-version 2 --prod /tmp/workspace/dist/local-weather-app --confirm
  deploy_cloudrun:
    docker:
      - image: 'cimg/base:stable'
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Copy built app to dist folder
          command: cp -avR /tmp/workspace/dist/ .
      - cloudrun/init
      - cloudrun/build:
          tag: 'gcr.io/${GOOGLE_PROJECT_ID}/test-${CIRCLE_SHA1}'
          source: ~/repo
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/test-${CIRCLE_SHA1}'
          platform: managed
          region: $GOOGLE_COMPUTE_ZONE
          service-name: $GOOGLE_PROJECT_ID
          unauthenticated: true
      - run:
          command: >
            GCP_API_RESULTS=$(curl -s "$GCP_DEPLOY_ENDPOINT")
            if ! echo "$GCP_API_RESULTS" | grep -nwo "LocalCast Weather";
            then
              echo "Result is unexpected"
              echo 'Result: '
              curl -s "$GCP_DEPLOY_ENDPOINT"
              EXIT 1;
            fi
          name: Test managed deployed service.
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - deploy_cloudrun:
          requires:
            - build
